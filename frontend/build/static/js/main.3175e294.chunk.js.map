{"version":3,"sources":["theme.js","Context/ChatProvider.js","components/state/index.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/SingleChat.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","components/sidenav.js","Pages/Chatpage.js","components/FlexBetween.jsx","components/WidgetWrapper.jsx","components/scenes/widgets/MyPostWidget.jsx","components/scenes/widgets/PostWidget.jsx","components/scenes/widgets/PostsWidget.jsx","components/scenes/forum/index.jsx","components/miscellaneous/UsersTable.js","components/miscellaneous/PostsTable.js","Pages/adminPage.js","components/PostEditPage/widgets/PostWidget.jsx","components/PostEditPage/widgets/PostsWidget.jsx","components/PostEditPage/PostEdit/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["colorTokens","0","10","50","100","200","300","400","500","600","700","800","900","1000","ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","selectedChat","setSelectedChat","useState","user","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","authSlice","createSlice","name","initialState","posts","reducers","setLogin","state","action","payload","setLogout","setPosts","setPost","updatedPosts","map","post","_id","actions","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","dispatch","useDispatch","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","handleClick","colorScheme","style","marginTop","async","title","status","duration","isClosable","position","config","headers","data","axios","isSuspend","description","isAdmin","setItem","stringify","error","response","message","isLoading","variant","Signup","setName","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","p","accept","pics","undefined","console","log","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","isOpen","onOpen","onClose","useDisclosure","username","setUsername","isEditable","setIsEditable","useSelector","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","event","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","mr","newUsername","put","concat","updateUsername","ScrollableChat","ScrollableFeed","display","Tooltip","label","placement","hasArrow","Avatar","mt","cursor","backgroundColor","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleAddUser","find","u","user1","groupAdmin","Authorization","token","chatId","handleRemove","chatName","flexWrap","pb","ml","query","get","handleSearch","Spinner","socket","selectedChatCompare","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","key","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","getSenderFull","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleDelete","delUser","filter","sel","slice","handleGroup","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","logoutHandler","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Sidebar","useColorModeValue","aria-label","pos","sx","overscrollBehavior","top","flexShrink","align","Chatpage","location","useLocation","FlexBetween","styled","WidgetWrapper","theme","palette","MyPostWidget","picturePath","isImage","setIsImage","image","setImage","useTheme","isNonMobileScreens","useMediaQuery","mediumMain","neutral","medium","gap","InputBase","light","border","Dropzone","acceptedFiles","multiple","onDrop","_ref2","getRootProps","getInputProps","primary","main","Typography","EditOutlined","DeleteOutlined","Divider","MoreHorizOutlined","disabled","postData","PostWidget","postId","postUserId","userPicturePath","likes","loggedInUserId","isLiked","Boolean","likeCount","Object","keys","updatedPost","patch","FavoriteOutlined","FavoriteBorderOutlined","PostsWidget","isProfile","getUserPosts","getPosts","Array","isArray","comments","Forum","flexBasis","UsersTable","setUsers","Table","Thead","Tr","Th","Tbody","Td","Switch","isChecked","toggleSuspendUser","isSuspended","PostsTable","toggleSuspendPost","AdminPage","setKey","prevKey","right","open","setOpen","handleClose","handleOpen","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","delete","window","reload","autoFocus","EditPostPage","App","mode","useMemo","createTheme","dark","default","typography","join","h1","h2","h3","h4","h5","h6","themeSettings","BrowserRouter","ThemeProvider","CssBaseline","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","React","StrictMode","PersistGate","persistor","persistStore","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3175e294.chunk.js","sourcesContent":["// color design tokens export\nexport const colorTokens = {\n  grey: {\n    0: \"#FFFFFF\",\n    10: \"#F6F6F6\",\n    50: \"#F0F0F0\",\n    100: \"#E0E0E0\",\n    200: \"#C2C2C2\",\n    300: \"#A3A3A3\",\n    400: \"#858585\",\n    500: \"#666666\",\n    600: \"#4D4D4D\",\n    700: \"#333333\",\n    800: \"#1A1A1A\",\n    900: \"#0A0A0A\",\n    1000: \"#000000\",\n  },\n  primary: {\n    50: \"#E6FBFF\",\n    100: \"#CCF7FE\",\n    200: \"#99EEFD\",\n    300: \"#66E6FC\",\n    400: \"#33DDFB\",\n    500: \"#00D5FA\",\n    600: \"#00A0BC\",\n    700: \"#006B7D\",\n    800: \"#00353F\",\n    900: \"#001519\",\n  },\n};\n\n// mui theme settings\nexport const themeSettings = (mode) => {\n  return {\n    palette: {\n      mode: mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            primary: {\n              dark: colorTokens.primary[200],\n              main: colorTokens.primary[500],\n              light: colorTokens.primary[800],\n            },\n            neutral: {\n              dark: colorTokens.grey[100],\n              main: colorTokens.grey[200],\n              mediumMain: colorTokens.grey[300],\n              medium: colorTokens.grey[400],\n              light: colorTokens.grey[700],\n            },\n            background: {\n              default: colorTokens.grey[900],\n              alt: colorTokens.grey[800],\n            },\n          }\n        : {\n            // palette values for light mode\n            primary: {\n              dark: colorTokens.primary[700],\n              main: colorTokens.primary[500],\n              light: colorTokens.primary[50],\n            },\n            neutral: {\n              dark: colorTokens.grey[700],\n              main: colorTokens.grey[500],\n              mediumMain: colorTokens.grey[400],\n              medium: colorTokens.grey[300],\n              light: colorTokens.grey[50],\n            },\n            background: {\n              default: colorTokens.grey[10],\n              alt: colorTokens.grey[0],\n            },\n          }),\n    },\n    typography: {\n      fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n      fontSize: 12,\n      h1: {\n        fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n        fontSize: 40,\n      },\n      h2: {\n        fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n        fontSize: 32,\n      },\n      h3: {\n        fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n        fontSize: 24,\n      },\n      h4: {\n        fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n        fontSize: 20,\n      },\n      h5: {\n        fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n        fontSize: 16,\n      },\n      h6: {\n        fontFamily: [\"Rubik\", \"sans-serif\"].join(\",\"),\n        fontSize: 14,\n      },\n    },\n  };\n};\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: null,\n  posts: [],\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setLogin: (state, action) => {\n      state.user = action.payload.user;\n\n    },\n    setLogout: (state) => {\n      state.user = null;\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload.posts;\n    },\n    setPost: (state, action) => {\n      const updatedPosts = state.posts.map((post) => {\n        if (post._id === action.payload.post._id) return action.payload.post;\n        return post;\n      });\n      state.posts = updatedPosts;\n    },\n  },\n});\n\nexport const { setLogin, setLogout, setPosts, setPost } =\n  authSlice.actions;\nexport default authSlice.reducer;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../state';\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Fields\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n    \n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n      if (data.isSuspend){\n        toast({\n          title: \"Account Suspended\",\n          description: \"Please contact admin\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      }\n\n      const isAdmin = data.isAdmin;\n      localStorage.setItem(\"isAdmin\", JSON.stringify(isAdmin));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      dispatch(setLogin({ user: data }));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: error.response.data.message,\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        setLoading(false);\n      \n      \n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { setLogin } from '../state';\nimport { useDispatch } from 'react-redux';\n\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      dispatch(setLogin({ user: data }))\n      setPicLoading(false);;\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          ChemTalking\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n Modal,\n ModalOverlay,\n ModalContent,\n ModalHeader,\n ModalFooter,\n ModalBody,\n ModalCloseButton,\n Button,\n useDisclosure,\n IconButton,\n Text,\n Image,\n FormControl,\n Input,\n FormLabel,\n} from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ProfileModal = ({ user, children }) => {\n const { isOpen, onOpen, onClose } = useDisclosure();\n const [username, setUsername] = useState(user.name);\n const [isEditable, setIsEditable] = useState(false);\n const { _id } = useSelector((state) => state.user);\n const dispatch = useDispatch();\n\n const handleUsernameChange = (event) => {\n   setUsername(event.target.value);\n };\n\n const updateUsername = async (id, newUsername) => {\n   try {\n     const response = await axios.put(`/api/user/${id}/username`, { username: newUsername });\n     return response.data;\n   } catch (error) {\n     console.error('Failed to update username:', error);\n   }\n };\n\n return (\n   <>\n     {children ? (\n       <span onClick={onOpen}>{children}</span>\n     ) : (\n       <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n     )}\n     <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n       <ModalOverlay />\n       <ModalContent h=\"410px\">\n         <ModalHeader\n           fontSize=\"40px\"\n           fontFamily=\"Work sans\"\n           d=\"flex\"\n           justifyContent=\"center\"\n         >\n           <FormControl>\n             <FormLabel onClick={() => setIsEditable(true)}>{user.name}</FormLabel>\n             <Input \n               value={isEditable ? username : undefined} \n               onChange={isEditable ? handleUsernameChange : undefined} \n             />\n           </FormControl>\n         </ModalHeader>\n         <ModalCloseButton />\n         <ModalBody\n           d=\"flex\"\n           flexDir=\"column\"\n           alignItems=\"center\"\n           justifyContent=\"space-between\"\n         >\n           <Image\n             borderRadius=\"full\"\n             boxSize=\"150px\"\n             src={user.pic}\n             alt={user.name}\n           />\n           <Text\n             fontSize={{ base: \"28px\", md: \"30px\" }}\n             fontFamily=\"Work sans\"\n           >\n             Email: {user.email}\n           </Text>\n         </ModalBody>\n         <ModalFooter>\n         <Button mr={3}\n            onClick={() => {\n            updateUsername(_id, {username}).then(() => {\n            setIsEditable(false);\n            });\n          }}>Update\n          </Button>\n\n           <Button onClick={onClose}>Close</Button>\n         </ModalFooter>\n       </ModalContent>\n     </Modal>\n   </>\n );\n};\n\nexport default ProfileModal;","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n                fontSize : \"20px\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\n\nconst UserListItem = ({user,  handleFunction }) => {\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"http://localhost:5000\"; //  \nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"40px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Open sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"40px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"30px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text fontSize=\"lg\">\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"s\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useDispatch } from 'react-redux';\nimport { setLogout} from '../state';\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n  const isAdmin = JSON.parse(localStorage.getItem('isAdmin'));\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    localStorage.removeItem(\"isAdmin\");\n    dispatch(setLogout());\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n      console.log(user);\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        {isAdmin && (\n          <Button onClick={() => history.push('/AdminPage')} colorScheme=\"teal\" variant=\"ghost\">\n            Admin Page\n          </Button>\n        )}\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          ChemTalking\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import {\r\n  Box,\r\n  Button,\r\n  VStack,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Sidebar = () => {\r\n    const history = useHistory();\r\n    const bg = useColorModeValue(\"white\", \"gray.800\");\r\n\r\n    return (\r\n      <Box\r\n        as=\"nav\"\r\n        aria-label=\"Main Navigation\"\r\n        pos=\"sticky\"\r\n        sx={{ overscrollBehavior: 'contain' }}\r\n        top=\"0\"\r\n        w=\"280px\"\r\n        h=\"calc(((100vh - 1.5rem) * 100) / 100)\"\r\n        overflowY=\"auto\"\r\n        className=\"sidebar-content\"\r\n        flexShrink={0}\r\n        bg={bg}\r\n        mr={10}\r\n      >\r\n        <VStack spacing=\"1\" align=\"stretch\">\r\n          <Button onClick={() => history.push('/chats')} colorScheme=\"teal\" variant=\"ghost\">Chat Page</Button>\r\n          <Button onClick={() => history.push('/forum')} colorScheme=\"teal\" variant=\"ghost\">Forum Page</Button>\r\n          <Button onClick={() => history.push('/PostEdit')} colorScheme=\"teal\" variant=\"ghost\">Post Edit Page</Button>\r\n        </VStack>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  export default Sidebar;\r\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState, useEffect} from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport Sidebar from \"../components/sidenav\";\n\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const location = useLocation();\n  const { user } = ChatState();\n  \n  useEffect(() => {\n    setFetchAgain(true);\n  }, [location]);\n \n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n      \n      <Sidebar />\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import { Box } from \"@material-ui/core\";\nimport { styled } from '@material-ui/core/styles';\n\nconst FlexBetween = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n});\n\nexport default FlexBetween;\n","import { Box } from \"@material-ui/core\";\nimport { styled } from '@material-ui/core/styles';\n\nconst WidgetWrapper = styled(Box)(({ theme }) => ({\n  padding: \"1.5rem 1.5rem 0.75rem 1.5rem\",\n  backgroundColor: theme.palette.background.alt,\n  borderRadius: \"0.75rem\",\n}));\n\nexport default WidgetWrapper;\n","  import {\n    EditOutlined,\n    DeleteOutlined,\n    AttachFileOutlined,\n    ImageOutlined,\n    MicOutlined,\n    MoreHorizOutlined,\n  } from \"@material-ui/icons\";\n  import GifOutlinedIcon from '@material-ui/icons/GifOutlined';\n  import {\n    Box,\n    Divider,\n    Typography,\n    InputBase,\n    useTheme,\n    Button,\n    IconButton,\n    useMediaQuery,\n  } from \"@material-ui/core\";\n  import FlexBetween from \"../../FlexBetween\";\n  import Dropzone from \"react-dropzone\";\n  import UserImage from \"../../UserImage\";\n  import WidgetWrapper from \"../../WidgetWrapper\";\n  import { useState } from \"react\";\n  import { useDispatch, useSelector } from \"react-redux\";\n  import { setPosts } from \"../../state\";\n  import axios from 'axios';\n\n  const MyPostWidget = ({ picturePath }) => {\n    const dispatch = useDispatch();\n    const [isImage, setIsImage] = useState(false);\n    const [image, setImage] = useState(null);\n    const [post, setPost] = useState(\"\");\n    const { palette } = useTheme();\n    const { _id } = useSelector((state) => state.user);\n    const token = useSelector((state) => state.token);\n    const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\n    const mediumMain = palette.neutral.mediumMain;\n    const medium = palette.neutral.medium;\n\n    const handlePost = async () => {\n      const postData = {\n        userId: _id,\n        description: post,\n        picturePath: image ? image.name : null\n      };\n     \n      try {\n        const response = await axios.post(\"api/posts\", postData, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const posts = response.data;\n        dispatch(setPosts({ posts }));\n        setImage(null);\n        setPost(\"\");\n      } catch (error) {\n        console.error(error);\n      }\n     };\n     \n\n    return (\n      <WidgetWrapper m=\"2rem 2rem\">\n        <FlexBetween gap=\"1.5rem\">\n          \n          <InputBase\n            placeholder=\"What's on your mind...\"\n            onChange={(e) => setPost(e.target.value)}\n            value={post}\n            sx={{\n              width: \"100%\",\n              backgroundColor: palette.neutral.light,\n              borderRadius: \"2rem\",\n              padding: \"1rem 2rem\",\n            }}\n          />\n        </FlexBetween>\n        {isImage && (\n          <Box\n            border={`1px solid ${medium}`}\n            borderRadius=\"5px\"\n            mt=\"1rem\"\n            p=\"1rem\"\n          >\n            <Dropzone\n              acceptedFiles=\".jpg,.jpeg,.png\"\n              multiple={false}\n              onDrop={(acceptedFiles) => setImage(acceptedFiles[0])}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <FlexBetween>\n                  <Box\n                    {...getRootProps()}\n                    border={`2px dashed ${palette.primary.main}`}\n                    p=\"1rem\"\n                    width=\"100%\"\n                    sx={{ \"&:hover\": { cursor: \"pointer\" } }}\n                  >\n                    <input {...getInputProps()} />\n                    {!image ? (\n                      <p>Add Image Here</p>\n                    ) : (\n                      <FlexBetween>\n                        <Typography>{image.name}</Typography>\n                        <EditOutlined />\n                      </FlexBetween>\n                    )}\n                  </Box>\n                  {image && (\n                    <IconButton\n                      onClick={() => setImage(null)}\n                      sx={{ width: \"15%\" }}\n                    >\n                      <DeleteOutlined />\n                    </IconButton>\n                  )}\n                </FlexBetween>\n              )}\n            </Dropzone>\n          </Box>\n        )}\n\n        <Divider sx={{ margin: \"1.25rem 0\" }} />\n\n        <FlexBetween>\n          <FlexBetween gap=\"0.25rem\" onClick={() => setIsImage(!isImage)}>\n            \n          </FlexBetween>\n\n          {isNonMobileScreens ? (\n            <>\n              <FlexBetween gap=\"0.25rem\">\n                \n              </FlexBetween>\n\n              <FlexBetween gap=\"0.25rem\">\n                \n              </FlexBetween>\n\n              <FlexBetween gap=\"0.25rem\">\n                \n              </FlexBetween>\n            </>\n          ) : (\n            <FlexBetween gap=\"0.25rem\">\n              <MoreHorizOutlined sx={{ color: mediumMain }} />\n            </FlexBetween>\n          )}\n\n          <Button\n            disabled={!post}\n            onClick={handlePost}\n            sx={{\n              color: palette.background.alt,\n              backgroundColor: palette.primary.main,\n              borderRadius: \"3rem\",\n            }}\n          >\n            POST\n          </Button>\n        </FlexBetween>\n      </WidgetWrapper>\n    );\n  };\n\n  export default MyPostWidget;\n","import {\n  ChatBubbleOutlineOutlined,\n  FavoriteBorderOutlined,\n  FavoriteOutlined,\n  ShareOutlined,\n} from \"@material-ui/icons\";\nimport { Box, Divider, IconButton, Typography, useTheme } from \"@material-ui/core\";\nimport FlexBetween from \"../../FlexBetween\";\nimport WidgetWrapper from \"../../WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPost } from \"../../state\";\nimport axios from 'axios';\n\nconst PostWidget = ({\n  postId,\n  postUserId,\n  name,\n  description,\n  location,\n  picturePath,\n  userPicturePath,\n  likes,\n\n}) => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const loggedInUserId = useSelector((state) => state.user._id);\n  const isLiked = Boolean(likes[loggedInUserId]);\n  const likeCount = Object.keys(likes).length;\n\n  const { palette } = useTheme();\n  const main = palette.neutral.main;\n  const primary = palette.primary.main;\n\n  const patchLike = async () => {\n    const response = await axios.patch(`api/posts/${postId}/like`, \n    { userId: loggedInUserId },\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const updatedPost = response.data;\n    dispatch(setPost({ post: updatedPost }));\n  };\n\n  return (\n    <WidgetWrapper m=\"2rem 2rem\">\n      <Typography style={{color: '#858585' }} sx={{ mt: \"3rem\" }}>\n        {name}\n      </Typography>\n      <Typography style={{color: '#858585' }} sx={{ mt: \"2rem\" }}>\n        {description}\n      </Typography>\n      <FlexBetween mt=\"0.25rem\">\n        <FlexBetween gap=\"1rem\">\n          <FlexBetween gap=\"0.3rem\">\n            <IconButton onClick={patchLike}>\n              {isLiked ? (\n                <FavoriteOutlined sx={{ color: primary }} />\n              ) : (\n                <FavoriteBorderOutlined />\n              )}\n            </IconButton>\n            <Typography>{likeCount}</Typography>\n          </FlexBetween>\n        </FlexBetween>\n\n      </FlexBetween>\n    </WidgetWrapper>\n  );\n};\n\nexport default PostWidget;\n","import { useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state\";\nimport PostWidget from \"./PostWidget\";\nimport axios from 'axios';\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n  const [loading, setLoading] = useState(true);\n  const getPosts = async () => {\n    const response = await axios.get(\"api/posts\", {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    dispatch(setPosts({ posts: response.data }));\n    setLoading(false);\n  };\n\n  const getUserPosts = async () => {\n    const response = await axios.get(\n      `api/posts/${userId}/posts`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    dispatch(setPosts({ posts: response.data }));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading) {\n   return <div>Loading...</div>;\n  }\n  return (\n    <>\n      {Array.isArray(posts) && posts.filter(post=> !post.isSuspend).map(\n        ({\n          _id,\n          userId,\n          name,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <PostWidget\n            key={_id}\n            postId={_id}\n            postUserId={userId}\n            name={`${name}`}\n            description={description}\n            location={location}\n            picturePath={picturePath}\n            userPicturePath={userPicturePath}\n            likes={likes}\n            comments={comments}\n          />\n        )\n      )}\n      \n    </>\n  );\n};\n\nexport default PostsWidget;\n","import { Box, useMediaQuery } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport MyPostWidget from \"../widgets/MyPostWidget\";\nimport PostsWidget from \"../widgets/PostsWidget\";\nimport Sidebar from \"../../sidenav\";\nimport SideDrawer from \"../../miscellaneous/SideDrawer\";\nimport { ChatState } from \"../../../Context/ChatProvider\";\nconst Forum = () => {\n  const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\n  const { _id, picturePath } = useSelector((state) => state.user);\n  const { user } = ChatState();\n\n  \n    return (  \n        \n    <Box width=\"100%\">\n      {user && <SideDrawer />}\n      <Box\n        width=\"100%\"\n        display={isNonMobileScreens ? \"flex\" : \"block\"}\n        gap=\"0.5rem\"\n        justifyContent=\"space-between\"\n      >\n        \n        <Sidebar \n          position=\"sticky\"\n           top={0}\n          height=\"100vh\"\n          \n          />\n        <Box\n          flexBasis={isNonMobileScreens ? \"100%\" : undefined}\n          mt={isNonMobileScreens ? undefined : \"2rem\"}\n        >\n          <MyPostWidget picturePath={picturePath} />\n          <PostsWidget userId={_id} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Forum;\n","import * as React from \"react\";\r\nimport { Box, Table, Thead, Tbody, Tr, Th, Td, Switch } from \"@chakra-ui/react\";\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UsersTable() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch users from the backend\r\n    axios.get('/api/admin/getUsers')\r\n      .then(response => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error!', error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleSuspendUser = (id, isSuspended) => {\r\n    // Toggle suspend status of user\r\n    axios.post(`/api/admin/${id}/suspendUser`, { isSuspend: !isSuspended })\r\n      .then(response => {\r\n        // Update user list\r\n        setUsers(users.map(user => user._id === id ? response.data : user));\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Table variant=\"simple\">\r\n      <Thead>\r\n        <Tr>\r\n          <Th>User Name</Th>\r\n          <Th>Email</Th>\r\n          <Th>Suspended</Th>\r\n        </Tr>\r\n      </Thead>\r\n      <Tbody>\r\n        {users.map((user)=> (\r\n          <Tr key={user._id}>\r\n            <Td>{user.name}</Td>\r\n            <Td>{user.email}</Td>\r\n            <Td>\r\n              <Switch colorScheme=\"red\" isChecked={user.isSuspend} onChange={() => toggleSuspendUser(user._id, user.isSuspend)} />\r\n            </Td>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default UsersTable;","import * as React from \"react\";\r\nimport { Box, Table, Thead, Tbody, Tr, Th, Td, Switch } from \"@chakra-ui/react\";\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PostsTable() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch users from the backend\r\n    axios.get('/api/admin/getPosts')\r\n      .then(response => {\r\n        setPosts(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error!', error);\r\n      });\r\n  }, []);\r\n\r\n  const toggleSuspendPost = (id, isSuspended) => {\r\n    // Toggle suspend status of user\r\n    axios.post(`/api/admin/${id}/suspendPost`, { isSuspend: !isSuspended })\r\n      .then(response => {\r\n        // Update post list\r\n        setPosts(posts.map(post => post._id === id ? response.data : post));\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error!', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Table variant=\"simple\">\r\n      <Thead>\r\n        <Tr>\r\n          <Th>User Name</Th>\r\n          <Th>Description</Th>\r\n          <Th>Suspended</Th>\r\n        </Tr>\r\n      </Thead>\r\n      <Tbody>\r\n        {posts.map((post) => (\r\n          <Tr key={post._id}>\r\n            <Td>{post.name}</Td>\r\n            <Td>{post.description}</Td>\r\n            <Td>\r\n              <Switch colorScheme=\"red\" isChecked={post.isSuspend} onChange={() => toggleSuspendPost(post._id, post.isSuspend)} />\r\n            </Td>\r\n          </Tr>\r\n        ))}\r\n      </Tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default PostsTable;","import * as React from \"react\";\r\nimport { Box, Flex, Tab, TabList, TabPanel, TabPanels, Tabs, Container, useMediaQuery} from \"@chakra-ui/react\";\r\nimport UsersTable from \"../components/miscellaneous/UsersTable\";\r\nimport PostsTable from \"../components/miscellaneous/PostsTable\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport Sidebar from \"../components/sidenav\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction AdminPage() {\r\n    const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\r\n    const { user } = ChatState();\r\n    const location = useLocation();\r\n    const [key, setKey] = useState(0);\r\n    useEffect(() => {\r\n        setKey(prevKey => prevKey + 1);\r\n      }, [location]);\r\n     \r\n    return (\r\n        <Box key={key} width=\"100%\">\r\n            {user && <SideDrawer />}\r\n            <Box width=\"100%\"\r\n                display={isNonMobileScreens ? \"flex\" : \"block\"}\r\n                gap=\"0.5rem\"\r\n                justifyContent=\"space-between\"\r\n            >\r\n\r\n            \r\n            <Sidebar \r\n                position=\"sticky\"\r\n                top={0}\r\n                right=\"-50px\"\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n           />\r\n            <Box \r\n                width=\"100%\"\r\n                display={isNonMobileScreens ? \"flex\" : \"block\"}\r\n                gap=\"0.5rem\"\r\n                justifyContent=\"space-between\">\r\n            <Tabs isFitted variant=\"enclosed\" width=\"100%\" backgroundColor=\"white\">\r\n            <TabList mb=\"1em\">\r\n                <Tab>Users</Tab>\r\n                <Tab>Posts</Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n                <TabPanel>\r\n                <UsersTable />\r\n                </TabPanel>\r\n                <TabPanel>\r\n                <PostsTable />\r\n                </TabPanel>\r\n            </TabPanels>\r\n            </Tabs>\r\n        </Box>\r\n        </Box>\r\n        </Box>\r\n      \r\n    );\r\n  }\r\n\r\nexport default AdminPage;\r\n","import {\n  ChatBubbleOutlineOutlined,\n  FavoriteBorderOutlined,\n  FavoriteOutlined,\n  ShareOutlined,\n  DeleteOutlined\n} from \"@material-ui/icons\";\nimport { Box, Divider, IconButton, Typography, useTheme, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button } from \"@material-ui/core\";\nimport FlexBetween from \"../../FlexBetween\";\nimport WidgetWrapper from \"../../WidgetWrapper\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state\";\nimport axios from 'axios';\n\nconst PostWidget = ({\n  postId,\n  postUserId,\n  name,\n  description,\n  location,\n  picturePath,\n  userPicturePath,\n  likes,\n\n}) => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const loggedInUserId = useSelector((state) => state.user._id);\n  const { palette } = useTheme();\n  const main = palette.neutral.main;\n  const primary = palette.primary.main;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n \n  const handleClose = () => {\n    setOpen(false);\n  };\n \n  const handleDelete = async () => {\n    try {\n      const response = await axios.delete(`/api/posts/${postId}/delete`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      dispatch(setPosts({ posts: response.data }));\n      handleClose();\n      window.location.reload()\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <WidgetWrapper m=\"2rem 2rem\">\n      <Typography style={{color: '#858585' }} sx={{ mt: \"3rem\" }}>\n        {name}\n      </Typography>\n      <Typography style={{color: '#858585' }} sx={{ mt: \"2rem\" }}>\n        {description}\n      </Typography>\n      <FlexBetween mt=\"0.25rem\">\n        <FlexBetween gap=\"1rem\">\n          <FlexBetween gap=\"0.3rem\">\n            <IconButton onClick={handleOpen}>\n              <DeleteOutlined />\n            </IconButton>\n            <Typography>Delete</Typography>\n          </FlexBetween>\n        </FlexBetween>\n\n      </FlexBetween>\n      <Dialog\n       open={open}\n       onClose={handleClose}\n       aria-labelledby=\"alert-dialog-title\"\n       aria-describedby=\"alert-dialog-description\"\n     >\n       <DialogTitle id=\"alert-dialog-title\">{\"Confirm Delete\"}</DialogTitle>\n       <DialogContent>\n         <DialogContentText id=\"alert-dialog-description\">\n           Are you sure you want to delete this post?\n         </DialogContentText>\n       </DialogContent>\n       <DialogActions>\n         <Button onClick={handleClose} color=\"primary\">\n           Cancel\n         </Button>\n         <Button onClick={handleDelete} color=\"primary\" autoFocus>\n           Delete\n         </Button>\n       </DialogActions>\n     </Dialog>\n    </WidgetWrapper>\n  );\n};\n\nexport default PostWidget;\n","import { useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state\";\nimport PostWidget from \"./PostWidget\";\nimport axios from 'axios';\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n  const [loading, setLoading] = useState(true);\n\n\n  const getUserPosts = async () => {\n    const response = await axios.get(\n      `api/posts/${userId}/posts`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    dispatch(setPosts({ posts: response.data }));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n      getUserPosts();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (loading) {\n   return <div>Loading...</div>;\n  }\n  return (\n    <>\n      {Array.isArray(posts) && posts.filter(post=> !post.isSuspend).map(\n        ({\n          _id,\n          userId,\n          name,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <PostWidget\n            key={_id}\n            postId={_id}\n            postUserId={userId}\n            name={`${name}`}\n            description={description}\n            location={location}\n            picturePath={picturePath}\n            userPicturePath={userPicturePath}\n          />\n          \n        )\n      )}\n      \n    </>\n  );\n};\n\nexport default PostsWidget;\n","import { Box, useMediaQuery } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport PostsWidget from \"../widgets/PostsWidget\";\nimport Sidebar from \"../../sidenav\";\nimport SideDrawer from \"../../miscellaneous/SideDrawer\";\nimport { ChatState } from \"../../../Context/ChatProvider\";\nconst EditPostPage = () => {\n  const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\n  const { _id, picturePath } = useSelector((state) => state.user);\n  const { user } = ChatState();\n\n  \n    return (  \n        \n    <Box width=\"100%\">\n      {user && <SideDrawer />}\n      <Box\n        width=\"100%\"\n        display={isNonMobileScreens ? \"flex\" : \"block\"}\n        gap=\"0.5rem\"\n        justifyContent=\"space-between\"\n      >\n        \n        <Sidebar \n          position=\"sticky\"\n           top={0}\n          height=\"100vh\"/>\n        <Box\n          flexBasis={isNonMobileScreens ? \"100%\" : undefined}\n          mt={isNonMobileScreens ? undefined : \"2rem\"}\n        >\n          <PostsWidget userId={_id} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EditPostPage;\n","import \"./App.css\";\n\nimport { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { themeSettings } from \"./theme\";\n\n\nimport Homepage from \"./Pages/Homepage\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\nimport Forum from \"./components/scenes/forum\";\nimport AdminPage from \"./Pages/adminPage\";\nimport EditPostPage from \"./components/PostEditPage/PostEdit\";\n\nfunction App() {\n  const mode = useSelector((state) => state.mode);\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n\n  return (\n    <div className=\"App\">\n\n\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Route path=\"/\" component={Homepage} exact />\n          <Route path=\"/chats\" component={Chatpage} />\n          <Route path=\"/AdminPage\" component={AdminPage} />\n          <Route path=\"/PostEdit\" component={EditPostPage} />\n          <Route path=\"/forum\" component={Forum} />\n        </ThemeProvider>\n      </BrowserRouter>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport authReducer from \"../src/components/state\"; \nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport {\n persistStore,\n persistReducer,\n FLUSH,\n REHYDRATE,\n PAUSE,\n PERSIST,\n PURGE,\n REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n reducer: persistedReducer,\n middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nReactDOM.render(\n <React.StrictMode>\n   <Provider store={store}>\n     <PersistGate loading={null} persistor={persistStore(store)}>\n       <ChakraProvider>\n         <BrowserRouter>\n           <ChatProvider>\n             <App />\n           </ChatProvider>\n         </BrowserRouter>\n       </ChakraProvider>\n     </PersistGate>\n   </Provider>\n </React.StrictMode>,\n document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}